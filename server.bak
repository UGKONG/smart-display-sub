'use strict';
// Constant
const { SerialPort } = require('serialport');
const config = require('./config.json');  // Mac: '/dev/cu.usbserial-1120'
const express = require('express');
const app = express();
const ipc = require('electron').ipcMain;
const log = (txt = 'Response') => console.log('Server: ' + txt);

let isSerialConnect = false;
let isSerialOn = false;

const port = new SerialPort({ path: config.serialPath, baudRate: config.serialSpeed }, err => {
  if (err) {
    log('Serial Port connection fail');
    isSerialConnect = false;
    return;
  }
  log('Serial Port connection success');
  isSerialConnect = true;
});

// Express Setting
app.set('port', config.serverPort);

// Serial Event Listener
port.on('close', () => log('Serial Port Close'));
port.on('data', data => {
  let value = data.toString();
  value = value.split(' ');
  value = value[1];
  value = value.trim();
  isSerialOn = value === 'ON';
  log('Serial Port ' + (isSerialOn ? 'ON' : 'OFF') + ' success');
});

// Function
const toggleSerialPort = (onoff = false) => {
  port.write(onoff ? 'O' : 'F', err => {
    if (err) log('Serial Port communication fail');
  });
}

// API
app.get('/isConnect', (req, res) => {
  res.send(true);
});
app.get('/isSerialConnect', (req, res) => {
  res.send(isSerialConnect);
});
app.get('/isSerialOn', (req, res) => {
  res.send(isSerialOn);
});
app.get('/serialPortOn', (req, res) => {
  log('Serial Port ON Request');
  if (!isSerialConnect) return log('Serial Port is not connected');
  if (isSerialOn) return log('Serial Port is already turned on');
  toggleSerialPort(true);
});
app.get('/serialPortOff', (req, res) => {
  log('Serial Port OFF Request');
  if (!isSerialConnect) return log('Serial Port is not connected');
  if (!isSerialOn) return log('Serial Port is already turned off');
  toggleSerialPort(false);
});
app.get('/closeApp', (req, res) => {
  ipc.emit('closeApp');
});
app.get('/reloadApp', (req, res) => {
  ipc.emit('reloadApp');
});

// Start
app.listen(app.get('port'), () => {
  log('Node server start (http://localhost:' + app.get('port') + ')');
});